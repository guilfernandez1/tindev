[{"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\App.js":"1","C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\index.js":"2","C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\routes.js":"3","C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\pages\\Login\\Login.js":"4","C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\services\\api.js":"5","C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\pages\\Main\\Main.js":"6"},{"size":150,"mtime":1611011587528,"results":"7","hashOfConfig":"8"},{"size":197,"mtime":1611005470249,"results":"9","hashOfConfig":"8"},{"size":393,"mtime":1611019891028,"results":"10","hashOfConfig":"8"},{"size":976,"mtime":1611019926139,"results":"11","hashOfConfig":"8"},{"size":123,"mtime":1611019863655,"results":"12","hashOfConfig":"8"},{"size":2417,"mtime":1611086517626,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14n3eve",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\App.js",[],"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\index.js",[],["29","30"],"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\routes.js",[],["31","32"],"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\pages\\Login\\Login.js",[],"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\services\\api.js",[],"C:\\Users\\PICHAU\\Desktop\\Development\\tindev\\frontend\\src\\pages\\Main\\Main.js",["33","34"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Main.css';\r\nimport api from '../../services/api';\r\nimport logo from '../../assets/logo.svg';\r\nimport dislike from '../../assets/dislike.svg';\r\nimport like from '../../assets/like.svg';\r\n\r\nexport default function Main({ match }) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadUsers() {\r\n            const response = await api.get('/devs', {\r\n                headers: {\r\n                    user: match.params.id\r\n                }\r\n            });\r\n\r\n            setUsers(response.data);\r\n        }\r\n        loadUsers();\r\n    }, [match.params.id]);\r\n\r\n    async function handleDislike(id) {\r\n        await api.post(`/devs/${id}/dislikes`, null, {\r\n            headers: { user: match.params.id }\r\n        });\r\n\r\n        setUsers(users.filter(user => user._id != id));\r\n    }\r\n\r\n\r\n    async function handleLike(id) {\r\n        await api.post(`devs/${id}/likes`, null, {\r\n            headers: { user: match.params.id }\r\n        });\r\n\r\n        setUsers(users.filter(user => user._id != id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Link to=\"/\">\r\n                <img src={logo} alt=\"Tindev\" />\r\n            </Link>\r\n            { users.length > 0 ? (\r\n                <ul>\r\n                    {users.map(user => (\r\n                        <li key={user._id}>\r\n                            <img src={user.avatar} alt={user.name} />\r\n                            <footer>\r\n                                <strong>{user.name}</strong>\r\n                                <p>{user.bio}</p>\r\n                            </footer>\r\n\r\n                            <div className=\"buttons\">\r\n                                <button type=\"button\" onClick={() => handleDislike(user._id)}>\r\n                                    <img src={dislike} alt=\"Dislike\" />\r\n                                </button>\r\n                                <button type=\"button\" onClick={() => handleLike(user._id)}>\r\n                                    <img src={like} alt=\"Like\" />\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <div className=\"empty\">Acabou :(</div>\r\n            ) }\r\n        </div>\r\n    );\r\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":30,"column":48,"nodeType":"43","messageId":"44","endLine":30,"endColumn":50},{"ruleId":"41","severity":1,"message":"42","line":39,"column":48,"nodeType":"43","messageId":"44","endLine":39,"endColumn":50},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],["45"],["46"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]